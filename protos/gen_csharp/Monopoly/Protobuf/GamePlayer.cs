// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: monopoly/game_player.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Monopoly.Protobuf {

  /// <summary>Holder for reflection information generated from monopoly/game_player.proto</summary>
  public static partial class GamePlayerReflection {

    #region Descriptor
    /// <summary>File descriptor for monopoly/game_player.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GamePlayerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chptb25vcG9seS9nYW1lX3BsYXllci5wcm90bxIIbW9ub3BvbHkaGW1vbm9w",
            "b2x5L2Nvb3JkaW5hdGUucHJvdG8aGHByaXNlbC9wbGF5ZXJfaW5mby5wcm90",
            "byKHAQoKR2FtZVBsYXllchIKCgJpZBgBIAEoCRINCgVtb25leRgCIAEoBRIh",
            "CgNwb3MYAyABKAsyFC5tb25vcG9seS5Db29yZGluYXRlEhEKCWNoYXJhY3Rl",
            "chgEIAEoBRIoCgxib3VuZF9wbGF5ZXIYBSABKAsyEi5wcmlzZWwuUGxheWVy",
            "SW5mb0IUqgIRTW9ub3BvbHkuUHJvdG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Monopoly.Protobuf.CoordinateReflection.Descriptor, global::Prisel.Protobuf.PlayerInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Monopoly.Protobuf.GamePlayer), global::Monopoly.Protobuf.GamePlayer.Parser, new[]{ "Id", "Money", "Pos", "Character", "BoundPlayer" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GamePlayer : pb::IMessage<GamePlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GamePlayer> _parser = new pb::MessageParser<GamePlayer>(() => new GamePlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GamePlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Monopoly.Protobuf.GamePlayerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GamePlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GamePlayer(GamePlayer other) : this() {
      id_ = other.id_;
      money_ = other.money_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      character_ = other.character_;
      boundPlayer_ = other.boundPlayer_ != null ? other.boundPlayer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GamePlayer Clone() {
      return new GamePlayer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 3;
    private global::Monopoly.Protobuf.Coordinate pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Monopoly.Protobuf.Coordinate Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 4;
    private int character_;
    /// <summary>
    /// character determine the sprite set, or color client side use to
    /// denote the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Character {
      get { return character_; }
      set {
        character_ = value;
      }
    }

    /// <summary>Field number for the "bound_player" field.</summary>
    public const int BoundPlayerFieldNumber = 5;
    private global::Prisel.Protobuf.PlayerInfo boundPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Prisel.Protobuf.PlayerInfo BoundPlayer {
      get { return boundPlayer_; }
      set {
        boundPlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GamePlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GamePlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Money != other.Money) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (Character != other.Character) return false;
      if (!object.Equals(BoundPlayer, other.BoundPlayer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (Character != 0) hash ^= Character.GetHashCode();
      if (boundPlayer_ != null) hash ^= BoundPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (Character != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Character);
      }
      if (boundPlayer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BoundPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (Character != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Character);
      }
      if (boundPlayer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BoundPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (Character != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Character);
      }
      if (boundPlayer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundPlayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GamePlayer other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::Monopoly.Protobuf.Coordinate();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.Character != 0) {
        Character = other.Character;
      }
      if (other.boundPlayer_ != null) {
        if (boundPlayer_ == null) {
          BoundPlayer = new global::Prisel.Protobuf.PlayerInfo();
        }
        BoundPlayer.MergeFrom(other.BoundPlayer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::Monopoly.Protobuf.Coordinate();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 32: {
            Character = input.ReadInt32();
            break;
          }
          case 42: {
            if (boundPlayer_ == null) {
              BoundPlayer = new global::Prisel.Protobuf.PlayerInfo();
            }
            input.ReadMessage(BoundPlayer);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::Monopoly.Protobuf.Coordinate();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 32: {
            Character = input.ReadInt32();
            break;
          }
          case 42: {
            if (boundPlayer_ == null) {
              BoundPlayer = new global::Prisel.Protobuf.PlayerInfo();
            }
            input.ReadMessage(BoundPlayer);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
