// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: monopoly/money_exchange_extra.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Monopoly.Protobuf {

  /// <summary>Holder for reflection information generated from monopoly/money_exchange_extra.proto</summary>
  public static partial class MoneyExchangeExtraReflection {

    #region Descriptor
    /// <summary>File descriptor for monopoly/money_exchange_extra.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MoneyExchangeExtraReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNtb25vcG9seS9tb25leV9leGNoYW5nZV9leHRyYS5wcm90bxIIbW9ub3Bv",
            "bHkioAEKEk1vbmV5RXhjaGFuZ2VFeHRyYRI+CglleGNoYW5nZXMYASADKAsy",
            "Ky5tb25vcG9seS5Nb25leUV4Y2hhbmdlRXh0cmEuRXhjaGFuZ2VzRW50cnkS",
            "GAoQbXlfY3VycmVudF9tb25leRgCIAEoBRowCg5FeGNoYW5nZXNFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAU6AjgBQhSqAhFNb25vcG9seS5Q",
            "cm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Monopoly.Protobuf.MoneyExchangeExtra), global::Monopoly.Protobuf.MoneyExchangeExtra.Parser, new[]{ "Exchanges", "MyCurrentMoney" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// pay x some money; get some money from all players; pay bank; get from bank
  /// </summary>
  public sealed partial class MoneyExchangeExtra : pb::IMessage<MoneyExchangeExtra>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MoneyExchangeExtra> _parser = new pb::MessageParser<MoneyExchangeExtra>(() => new MoneyExchangeExtra());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoneyExchangeExtra> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Monopoly.Protobuf.MoneyExchangeExtraReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoneyExchangeExtra() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoneyExchangeExtra(MoneyExchangeExtra other) : this() {
      exchanges_ = other.exchanges_.Clone();
      myCurrentMoney_ = other.myCurrentMoney_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoneyExchangeExtra Clone() {
      return new MoneyExchangeExtra(this);
    }

    /// <summary>Field number for the "exchanges" field.</summary>
    public const int ExchangesFieldNumber = 1;
    private static readonly pbc::MapField<string, int>.Codec _map_exchanges_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 10);
    private readonly pbc::MapField<string, int> exchanges_ = new pbc::MapField<string, int>();
    /// <summary>
    /// player, amount
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> Exchanges {
      get { return exchanges_; }
    }

    /// <summary>Field number for the "my_current_money" field.</summary>
    public const int MyCurrentMoneyFieldNumber = 2;
    private int myCurrentMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyCurrentMoney {
      get { return myCurrentMoney_; }
      set {
        myCurrentMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoneyExchangeExtra);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoneyExchangeExtra other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Exchanges.Equals(other.Exchanges)) return false;
      if (MyCurrentMoney != other.MyCurrentMoney) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Exchanges.GetHashCode();
      if (MyCurrentMoney != 0) hash ^= MyCurrentMoney.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      exchanges_.WriteTo(output, _map_exchanges_codec);
      if (MyCurrentMoney != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MyCurrentMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      exchanges_.WriteTo(ref output, _map_exchanges_codec);
      if (MyCurrentMoney != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MyCurrentMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += exchanges_.CalculateSize(_map_exchanges_codec);
      if (MyCurrentMoney != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyCurrentMoney);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoneyExchangeExtra other) {
      if (other == null) {
        return;
      }
      exchanges_.Add(other.exchanges_);
      if (other.MyCurrentMoney != 0) {
        MyCurrentMoney = other.MyCurrentMoney;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            exchanges_.AddEntriesFrom(input, _map_exchanges_codec);
            break;
          }
          case 16: {
            MyCurrentMoney = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            exchanges_.AddEntriesFrom(ref input, _map_exchanges_codec);
            break;
          }
          case 16: {
            MyCurrentMoney = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
