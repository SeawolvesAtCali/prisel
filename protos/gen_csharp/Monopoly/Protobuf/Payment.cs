// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: monopoly/payment.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Monopoly.Protobuf {

  /// <summary>Holder for reflection information generated from monopoly/payment.proto</summary>
  public static partial class PaymentReflection {

    #region Descriptor
    /// <summary>File descriptor for monopoly/payment.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PaymentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZtb25vcG9seS9wYXltZW50LnByb3RvEghtb25vcG9seRoXbW9ub3BvbHkv",
            "cHJvcGVydHkucHJvdG8iZQoHUGF5bWVudBINCgVwYXllZRgBIAEoCRINCgVw",
            "YXllchgCIAEoCRIOCgZhbW91bnQYAyABKAUSLAoMZm9yX3Byb3BlcnR5GAQg",
            "ASgLMhYubW9ub3BvbHkuUHJvcGVydHlJbmZvQhSqAhFNb25vcG9seS5Qcm90",
            "b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Monopoly.Protobuf.PropertyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Monopoly.Protobuf.Payment), global::Monopoly.Protobuf.Payment.Parser, new[]{ "Payee", "Payer", "Amount", "ForProperty" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Payment : pb::IMessage<Payment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Payment> _parser = new pb::MessageParser<Payment>(() => new Payment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Payment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Monopoly.Protobuf.PaymentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payment(Payment other) : this() {
      payee_ = other.payee_;
      payer_ = other.payer_;
      amount_ = other.amount_;
      forProperty_ = other.forProperty_ != null ? other.forProperty_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payment Clone() {
      return new Payment(this);
    }

    /// <summary>Field number for the "payee" field.</summary>
    public const int PayeeFieldNumber = 1;
    private string payee_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payee {
      get { return payee_; }
      set {
        payee_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payer" field.</summary>
    public const int PayerFieldNumber = 2;
    private string payer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payer {
      get { return payer_; }
      set {
        payer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "for_property" field.</summary>
    public const int ForPropertyFieldNumber = 4;
    private global::Monopoly.Protobuf.PropertyInfo forProperty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Monopoly.Protobuf.PropertyInfo ForProperty {
      get { return forProperty_; }
      set {
        forProperty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Payment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Payment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payee != other.Payee) return false;
      if (Payer != other.Payer) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(ForProperty, other.ForProperty)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payee.Length != 0) hash ^= Payee.GetHashCode();
      if (Payer.Length != 0) hash ^= Payer.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (forProperty_ != null) hash ^= ForProperty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Payee.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Payee);
      }
      if (Payer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Payer);
      }
      if (Amount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Amount);
      }
      if (forProperty_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ForProperty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Payee.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Payee);
      }
      if (Payer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Payer);
      }
      if (Amount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Amount);
      }
      if (forProperty_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ForProperty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payee.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Payee);
      }
      if (Payer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Payer);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (forProperty_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForProperty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Payment other) {
      if (other == null) {
        return;
      }
      if (other.Payee.Length != 0) {
        Payee = other.Payee;
      }
      if (other.Payer.Length != 0) {
        Payer = other.Payer;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.forProperty_ != null) {
        if (forProperty_ == null) {
          ForProperty = new global::Monopoly.Protobuf.PropertyInfo();
        }
        ForProperty.MergeFrom(other.ForProperty);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payee = input.ReadString();
            break;
          }
          case 18: {
            Payer = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt32();
            break;
          }
          case 34: {
            if (forProperty_ == null) {
              ForProperty = new global::Monopoly.Protobuf.PropertyInfo();
            }
            input.ReadMessage(ForProperty);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Payee = input.ReadString();
            break;
          }
          case 18: {
            Payer = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt32();
            break;
          }
          case 34: {
            if (forProperty_ == null) {
              ForProperty = new global::Monopoly.Protobuf.PropertyInfo();
            }
            input.ReadMessage(ForProperty);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
