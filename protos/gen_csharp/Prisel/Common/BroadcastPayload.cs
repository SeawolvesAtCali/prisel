// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Prisel.Common
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct BroadcastPayload : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static BroadcastPayload GetRootAsBroadcastPayload(ByteBuffer _bb) { return GetRootAsBroadcastPayload(_bb, new BroadcastPayload()); }
  public static BroadcastPayload GetRootAsBroadcastPayload(ByteBuffer _bb, BroadcastPayload obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BroadcastPayload __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Prisel.Common.PlayerInfo? Player { get { int o = __p.__offset(4); return o != 0 ? (Prisel.Common.PlayerInfo?)(new Prisel.Common.PlayerInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public string Message { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<Prisel.Common.BroadcastPayload> CreateBroadcastPayload(FlatBufferBuilder builder,
      Offset<Prisel.Common.PlayerInfo> playerOffset = default(Offset<Prisel.Common.PlayerInfo>),
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartTable(2);
    BroadcastPayload.AddMessage(builder, messageOffset);
    BroadcastPayload.AddPlayer(builder, playerOffset);
    return BroadcastPayload.EndBroadcastPayload(builder);
  }

  public static void StartBroadcastPayload(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddPlayer(FlatBufferBuilder builder, Offset<Prisel.Common.PlayerInfo> playerOffset) { builder.AddOffset(0, playerOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(1, messageOffset.Value, 0); }
  public static Offset<Prisel.Common.BroadcastPayload> EndBroadcastPayload(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Prisel.Common.BroadcastPayload>(o);
  }
};


}
