// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { GamePlayer } from '../../monopoly/schema/game-player';


export class AnnouncePlayerLeftPayload {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):AnnouncePlayerLeftPayload {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAnnouncePlayerLeftPayload(bb:flatbuffers.ByteBuffer, obj?:AnnouncePlayerLeftPayload):AnnouncePlayerLeftPayload {
  return (obj || new AnnouncePlayerLeftPayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAnnouncePlayerLeftPayload(bb:flatbuffers.ByteBuffer, obj?:AnnouncePlayerLeftPayload):AnnouncePlayerLeftPayload {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AnnouncePlayerLeftPayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

player(obj?:GamePlayer):GamePlayer|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new GamePlayer()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startAnnouncePlayerLeftPayload(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addPlayer(builder:flatbuffers.Builder, playerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, playerOffset, 0);
}

static endAnnouncePlayerLeftPayload(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAnnouncePlayerLeftPayload(builder:flatbuffers.Builder, playerOffset:flatbuffers.Offset):flatbuffers.Offset {
  AnnouncePlayerLeftPayload.startAnnouncePlayerLeftPayload(builder);
  AnnouncePlayerLeftPayload.addPlayer(builder, playerOffset);
  return AnnouncePlayerLeftPayload.endAnnouncePlayerLeftPayload(builder);
}
}
