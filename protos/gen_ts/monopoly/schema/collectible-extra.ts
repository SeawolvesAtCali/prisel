// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { CollectibleType } from '../../monopoly/schema/collectible-type';


export class CollectibleExtra {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):CollectibleExtra {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCollectibleExtra(bb:flatbuffers.ByteBuffer, obj?:CollectibleExtra):CollectibleExtra {
  return (obj || new CollectibleExtra()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCollectibleExtra(bb:flatbuffers.ByteBuffer, obj?:CollectibleExtra):CollectibleExtra {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CollectibleExtra()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

type():CollectibleType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : CollectibleType.UNSPECIFIED;
}

static startCollectibleExtra(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addType(builder:flatbuffers.Builder, type:CollectibleType) {
  builder.addFieldInt32(0, type, CollectibleType.UNSPECIFIED);
}

static endCollectibleExtra(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCollectibleExtra(builder:flatbuffers.Builder, type:CollectibleType):flatbuffers.Offset {
  CollectibleExtra.startCollectibleExtra(builder);
  CollectibleExtra.addType(builder, type);
  return CollectibleExtra.endCollectibleExtra(builder);
}
}
