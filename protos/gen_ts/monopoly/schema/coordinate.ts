// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class Coordinate {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):Coordinate {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCoordinate(bb:flatbuffers.ByteBuffer, obj?:Coordinate):Coordinate {
  return (obj || new Coordinate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCoordinate(bb:flatbuffers.ByteBuffer, obj?:Coordinate):Coordinate {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Coordinate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

row():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

col():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startCoordinate(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addRow(builder:flatbuffers.Builder, row:number) {
  builder.addFieldInt32(0, row, 0);
}

static addCol(builder:flatbuffers.Builder, col:number) {
  builder.addFieldInt32(1, col, 0);
}

static endCoordinate(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCoordinate(builder:flatbuffers.Builder, row:number, col:number):flatbuffers.Offset {
  Coordinate.startCoordinate(builder);
  Coordinate.addRow(builder, row);
  Coordinate.addCol(builder, col);
  return Coordinate.endCoordinate(builder);
}
}
