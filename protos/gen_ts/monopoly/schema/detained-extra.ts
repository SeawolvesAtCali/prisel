// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { DetainedType } from '../../monopoly/schema/detained-type';


export class DetainedExtra {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):DetainedExtra {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDetainedExtra(bb:flatbuffers.ByteBuffer, obj?:DetainedExtra):DetainedExtra {
  return (obj || new DetainedExtra()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDetainedExtra(bb:flatbuffers.ByteBuffer, obj?:DetainedExtra):DetainedExtra {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DetainedExtra()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

type():DetainedType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : DetainedType.UNSPECIFIED;
}

length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startDetainedExtra(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addType(builder:flatbuffers.Builder, type:DetainedType) {
  builder.addFieldInt32(0, type, DetainedType.UNSPECIFIED);
}

static addLength(builder:flatbuffers.Builder, length:number) {
  builder.addFieldInt32(1, length, 0);
}

static endDetainedExtra(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDetainedExtra(builder:flatbuffers.Builder, type:DetainedType, length:number):flatbuffers.Offset {
  DetainedExtra.startDetainedExtra(builder);
  DetainedExtra.addType(builder, type);
  DetainedExtra.addLength(builder, length);
  return DetainedExtra.endDetainedExtra(builder);
}
}
