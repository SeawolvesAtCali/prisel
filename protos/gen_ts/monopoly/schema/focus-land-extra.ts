// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { PropertyInfo } from '../../monopoly/schema/property-info';


export class FocusLandExtra {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):FocusLandExtra {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFocusLandExtra(bb:flatbuffers.ByteBuffer, obj?:FocusLandExtra):FocusLandExtra {
  return (obj || new FocusLandExtra()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFocusLandExtra(bb:flatbuffers.ByteBuffer, obj?:FocusLandExtra):FocusLandExtra {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FocusLandExtra()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

property(obj?:PropertyInfo):PropertyInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PropertyInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startFocusLandExtra(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addProperty(builder:flatbuffers.Builder, propertyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, propertyOffset, 0);
}

static endFocusLandExtra(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFocusLandExtra(builder:flatbuffers.Builder, propertyOffset:flatbuffers.Offset):flatbuffers.Offset {
  FocusLandExtra.startFocusLandExtra(builder);
  FocusLandExtra.addProperty(builder, propertyOffset);
  return FocusLandExtra.endFocusLandExtra(builder);
}
}
