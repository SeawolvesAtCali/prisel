// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Coordinate } from '../../monopoly/schema/coordinate';
import { PlayerInfo } from '../../prisel/common/player-info';


export class GamePlayer {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):GamePlayer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGamePlayer(bb:flatbuffers.ByteBuffer, obj?:GamePlayer):GamePlayer {
  return (obj || new GamePlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGamePlayer(bb:flatbuffers.ByteBuffer, obj?:GamePlayer):GamePlayer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GamePlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

money():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

pos(obj?:Coordinate):Coordinate|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Coordinate()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

character():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

boundPlayer(obj?:PlayerInfo):PlayerInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new PlayerInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startGamePlayer(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addMoney(builder:flatbuffers.Builder, money:number) {
  builder.addFieldInt32(1, money, 0);
}

static addPos(builder:flatbuffers.Builder, posOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, posOffset, 0);
}

static addCharacter(builder:flatbuffers.Builder, character:number) {
  builder.addFieldInt32(3, character, 0);
}

static addBoundPlayer(builder:flatbuffers.Builder, boundPlayerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, boundPlayerOffset, 0);
}

static endGamePlayer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
