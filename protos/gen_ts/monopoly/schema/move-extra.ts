// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Coordinate } from '../../monopoly/schema/coordinate';
import { GamePlayer } from '../../monopoly/schema/game-player';


export class MoveExtra {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):MoveExtra {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMoveExtra(bb:flatbuffers.ByteBuffer, obj?:MoveExtra):MoveExtra {
  return (obj || new MoveExtra()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMoveExtra(bb:flatbuffers.ByteBuffer, obj?:MoveExtra):MoveExtra {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MoveExtra()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

player(obj?:GamePlayer):GamePlayer|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new GamePlayer()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

start(obj?:Coordinate):Coordinate|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Coordinate()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

path(index: number, obj?:Coordinate):Coordinate|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Coordinate()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

pathLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startMoveExtra(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addPlayer(builder:flatbuffers.Builder, playerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, playerOffset, 0);
}

static addStart(builder:flatbuffers.Builder, startOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, startOffset, 0);
}

static addPath(builder:flatbuffers.Builder, pathOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, pathOffset, 0);
}

static createPathVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPathVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endMoveExtra(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
