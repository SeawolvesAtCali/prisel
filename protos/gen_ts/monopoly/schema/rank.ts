// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Asset } from '../../monopoly/schema/asset';
import { GamePlayer } from '../../monopoly/schema/game-player';


export class Rank {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):Rank {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRank(bb:flatbuffers.ByteBuffer, obj?:Rank):Rank {
  return (obj || new Rank()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRank(bb:flatbuffers.ByteBuffer, obj?:Rank):Rank {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Rank()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

player(obj?:GamePlayer):GamePlayer|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new GamePlayer()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

asset(obj?:Asset):Asset|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Asset()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startRank(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addPlayer(builder:flatbuffers.Builder, playerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, playerOffset, 0);
}

static addAsset(builder:flatbuffers.Builder, assetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, assetOffset, 0);
}

static endRank(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
