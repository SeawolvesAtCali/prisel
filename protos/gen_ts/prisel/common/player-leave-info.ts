// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class PlayerLeaveInfo {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):PlayerLeaveInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPlayerLeaveInfo(bb:flatbuffers.ByteBuffer, obj?:PlayerLeaveInfo):PlayerLeaveInfo {
  return (obj || new PlayerLeaveInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPlayerLeaveInfo(bb:flatbuffers.ByteBuffer, obj?:PlayerLeaveInfo):PlayerLeaveInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PlayerLeaveInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

playerId():string|null
playerId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
playerId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startPlayerLeaveInfo(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addPlayerId(builder:flatbuffers.Builder, playerIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, playerIdOffset, 0);
}

static endPlayerLeaveInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPlayerLeaveInfo(builder:flatbuffers.Builder, playerIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  PlayerLeaveInfo.startPlayerLeaveInfo(builder);
  PlayerLeaveInfo.addPlayerId(builder, playerIdOffset);
  return PlayerLeaveInfo.endPlayerLeaveInfo(builder);
}
}
