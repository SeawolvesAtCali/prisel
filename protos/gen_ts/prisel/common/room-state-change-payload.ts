// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { RoomStateChangeInfo, unionToRoomStateChangeInfo, unionListToRoomStateChangeInfo } from '../../prisel/common/room-state-change-info';
import { UpdateToken } from '../../prisel/common/update-token';


export class RoomStateChangePayload {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):RoomStateChangePayload {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRoomStateChangePayload(bb:flatbuffers.ByteBuffer, obj?:RoomStateChangePayload):RoomStateChangePayload {
  return (obj || new RoomStateChangePayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRoomStateChangePayload(bb:flatbuffers.ByteBuffer, obj?:RoomStateChangePayload):RoomStateChangePayload {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RoomStateChangePayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

changeType():RoomStateChangeInfo {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : RoomStateChangeInfo.NONE;
}

change<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

token(obj?:UpdateToken):UpdateToken|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new UpdateToken()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startRoomStateChangePayload(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addChangeType(builder:flatbuffers.Builder, changeType:RoomStateChangeInfo) {
  builder.addFieldInt8(0, changeType, RoomStateChangeInfo.NONE);
}

static addChange(builder:flatbuffers.Builder, changeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, changeOffset, 0);
}

static addToken(builder:flatbuffers.Builder, tokenOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, tokenOffset, 0);
}

static endRoomStateChangePayload(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
