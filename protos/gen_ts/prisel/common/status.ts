// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { StatusCode } from '../../prisel/common/status-code';


export class Status {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):Status {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStatus(bb:flatbuffers.ByteBuffer, obj?:Status):Status {
  return (obj || new Status()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStatus(bb:flatbuffers.ByteBuffer, obj?:Status):Status {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Status()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

code():StatusCode {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : StatusCode.UNSPECIFIED;
}

message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

detail():string|null
detail(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
detail(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startStatus(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addCode(builder:flatbuffers.Builder, code:StatusCode) {
  builder.addFieldInt32(0, code, StatusCode.UNSPECIFIED);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, messageOffset, 0);
}

static addDetail(builder:flatbuffers.Builder, detailOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, detailOffset, 0);
}

static endStatus(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStatus(builder:flatbuffers.Builder, code:StatusCode, messageOffset:flatbuffers.Offset, detailOffset:flatbuffers.Offset):flatbuffers.Offset {
  Status.startStatus(builder);
  Status.addCode(builder, code);
  Status.addMessage(builder, messageOffset);
  Status.addDetail(builder, detailOffset);
  return Status.endStatus(builder);
}
}
